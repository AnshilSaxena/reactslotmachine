{"version":3,"sources":["Machine.jsx","App.js","reportWebVitals.js","index.js"],"names":["Machine","console","log","this","props","s1","s2","s3","isLucky","React","Component","Button","onClick","onClickFunction","increment","Display","message","App","randArr","useState","counter","setCounter","incrementCounter","incrementValue","className","Math","floor","random","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kPAkBeA,E,4JAfX,WACIC,QAAQC,IAAIC,KAAKC,OADZ,MAEkBD,KAAKC,MAApBC,EAFH,EAEGA,GAAIC,EAFP,EAEOA,GAAIC,EAFX,EAEWA,GACVC,EAAUH,IAAOC,GAAMD,IAAOE,EACpC,OACI,gCACI,+BAAOF,IACP,+BAAOC,IACP,+BAAOC,IACP,8BAAMC,EAAU,QAAU,mB,GAVpBC,IAAMC,WCG5B,SAASC,EAAOP,GAEf,OACE,yBAAQQ,QAFW,kBAAMR,EAAMS,gBAAgBT,EAAMU,YAErD,cACKV,EAAMU,aAKd,SAASC,EAAQX,GAChB,OACE,8BAAMA,EAAMY,UA+BAC,MA1Bf,WACE,IAAMC,EAAU,CAAC,IAAK,IAAK,KADd,EAEiBC,mBAAS,GAF1B,mBAENC,EAFM,KAEGC,EAFH,KAGPC,EAAmB,SAACC,GAAD,OAAoBF,EAAWD,EAAQG,IAChE,OACE,qCACA,sBAAKC,UAAU,MAAf,UACE,8CACA,cAAC,EAAD,CACEnB,GAAIa,EAAQO,KAAKC,MAAMD,KAAKE,SAAWT,EAAQU,SAC/CtB,GAAIY,EAAQO,KAAKC,MAAMD,KAAKE,SAAWT,EAAQU,SAC/CrB,GAAIW,EAAQO,KAAKC,MAAMD,KAAKE,SAAWT,EAAQU,cAInD,sBAAKJ,UAAU,SAAf,UACE,cAACb,EAAD,CAAQE,gBAAiBS,EAAkBR,UAAW,IACtD,cAACH,EAAD,CAAQE,gBAAiBS,EAAkBR,UAAW,IACtD,cAACH,EAAD,CAAQE,gBAAiBS,EAAkBR,UAAW,KACtD,cAACH,EAAD,CAAQE,gBAAiBS,EAAkBR,UAAW,MACtD,cAACC,EAAD,CAASC,QAASI,WC7BTS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.663460ca.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Machine extends React.Component {\r\n    render() {\r\n        console.log(this.props);\r\n        const { s1, s2, s3 } = this.props;\r\n        const isLucky = s1 === s2 && s1 === s3;\r\n        return (\r\n            <div>\r\n                <span>{s1}</span>\r\n                <span>{s2}</span>\r\n                <span>{s3}</span>\r\n                <div>{isLucky ? \"Lucky\" : \"Unlucky\"}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Machine;\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from \"react\";\nimport Machine from \"./Machine\";\n\nfunction Button(props) {\n  const handleClick = () => props.onClickFunction(props.increment);\n\treturn (\n  \t<button onClick={handleClick}>\n      +{props.increment}\n    </button>\n  );\n}\n\nfunction Display(props) {\n\treturn (\n  \t<div>{props.message}</div>\n  );\n}\n\n\nfunction App() {\n  const randArr = [\"a\", \"b\", \"c\"];\n  const [counter, setCounter] = useState(0);\n  const incrementCounter = (incrementValue) => setCounter(counter+incrementValue);\n  return (\n    <>\n    <div className=\"App\">\n      <h2>Slot Machine</h2>\n      <Machine\n        s1={randArr[Math.floor(Math.random() * randArr.length)]}\n        s2={randArr[Math.floor(Math.random() * randArr.length)]}\n        s3={randArr[Math.floor(Math.random() * randArr.length)]}\n      />\n    </div>\n\n    <div className=\"button\">\n      <Button onClickFunction={incrementCounter} increment={1} />\n      <Button onClickFunction={incrementCounter} increment={5} />\n      <Button onClickFunction={incrementCounter} increment={10} />\n      <Button onClickFunction={incrementCounter} increment={100} />\n      <Display message={counter}/>\n    </div>  \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}